knitr::opts_chunk$set(echo = TRUE)
################################################################################
# I like to include several additional notes in the header of my files here:
#
# Last modified: 8/11/2022
#
### PURPOSE:
# Lecture 5 code and output file
#
### NOTES:
# - uses the Tidyverse package and Dplyr
################################################################################
### 0. Load the packages we will need for this file ####
library(tidyverse) # load the installed package for each new session of R
library(broom)
library(faux) # Useful package for simulating data
library(modelsummary) # For making regression tables
library(causaldata) # Useful toy data sets
library(here) # Helpful in working with directories and projects
set.seed(03262020) # Setting the seed helps to make random number generators give us the same numbers across machines
################################################################################
here()
library(readxl) # Read in data
mydata <- read_xlsx(here("HealthExpenses.xlsx"))
mydata <- read_xlsx(here("HealthExpenses.xlsx"))
# first, simple regression -- what is effect of insurance on expenses?
m1 <- lm(expenses ~ coverage,data=mydata)
msummary(list(m1),
vcov=c("robust"),
stars=c('*' = .1, '**' = .05, '***' = .01))
mydata %>%
mutate(BMI1 = ifelse(coverage == 1,bmi,NA),
BMI2 = ifelse(coverage == 0,bmi,NA)) %>%
ggplot(aes(x=bmi) ) +
geom_density( aes(x = BMI1, y = ..density..), fill="#69b3a2") +
geom_label( aes(x=37, y=0.015, label="Treatment Group"), color="#69b3a2") +
geom_density( aes(x = BMI2, y = -..density..), fill= "#404080") +
geom_label( aes(x=25, y=-0.015, label="Control Group"), color="#404080") +
theme_minimal() +
geom_vline(xintercept = median(mydata[which(mydata$coverage==1),]$bmi),color = "#337E6E",size=2,linetype="dashed") +
geom_vline(xintercept = median(mydata[which(mydata$coverage==0),]$bmi),color = "#944B8C",size=2,linetype="dashed") +
labs(x="BMI",y="Density")
# Summary table of all baseline outcomes across groups
sumtable(data=mydata,group="coverage",
vars=c("age","sex","bmi","children","smoker","expenses"),
digits=2,group.test=T)
library(vtable)
sumtable(data=mydata,group="coverage",
vars=c("age","sex","bmi","children","smoker","expenses"),
digits=2,group.test=T)
mydata <- mydata %>% mutate(region_ne = ifelse(region == "northeast",1,0),
region_nw = ifelse(region == "northwest",1,0),
region_se = ifelse(region == "southeast",1,0),
# Create 3 dummy variables for the 4 regions
female = (ifelse(sex == "female",1,0)))
